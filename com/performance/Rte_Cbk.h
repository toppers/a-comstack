/*
 *  TOPPERS/A-COM
 *      Automotive COM
 *
 *  Copyright (C) 2013-2014 by Center for Embedded Computing Systems
 *              Graduate School of Information Science, Nagoya Univ., JAPAN
 *  Copyright (C) 2013-2014 by FUJI SOFT INCORPORATED, JAPAN
 *  Copyright (C) 2013-2014 by Panasonic Advanced Technology Development Co., Ltd., JAPAN
 *  Copyright (C) 2013-2014 by Renesas Electronics Corporation, JAPAN
 *  Copyright (C) 2013-2014 by Sunny Giken Inc., JAPAN
 *  Copyright (C) 2013-2014 by TOSHIBA CORPORATION, JAPAN
 *  Copyright (C) 2013-2014 by Witz Corporation, JAPAN
 *
 *  上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
 *  ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
 *  変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 *  (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
 *      権表示，この利用条件および下記の無保証規定が，そのままの形でソー
 *      スコード中に含まれていること．
 *  (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
 *      用できる形で再配布する場合には，再配布に伴うドキュメント（利用
 *      者マニュアルなど）に，上記の著作権表示，この利用条件および下記
 *      の無保証規定を掲載すること．
 *  (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
 *      用できない形で再配布する場合には，次のいずれかの条件を満たすこ
 *      と．
 *    (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
 *        作権表示，この利用条件および下記の無保証規定を掲載すること．
 *    (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
 *        報告すること．
 *  (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
 *      害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
 *      また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
 *      由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
 *      免責すること．
 *
 *  本ソフトウェアは，AUTOSAR（AUTomotive Open System ARchitecture）仕
 *  様に基づいている．上記の許諾は，AUTOSARの知的財産権を許諾するもので
 *  はない．AUTOSARは，AUTOSAR仕様に基づいたソフトウェアを商用目的で利
 *  用する者に対して，AUTOSARパートナーになることを求めている．
 *
 *  本ソフトウェアは，無保証で提供されているものである．上記著作権者お
 *  よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
 *  に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
 *  アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
 *  の責任を負わない．
 *
 *  $Id: Rte_Cbk.h 425 2014-09-17 00:46:01Z fsi-dankei $
 */

#ifndef RTE_CBK_H
#define RTE_CBK_H

void Rte_COMCbkTErr_sn0();
void Rte_COMCbkTAck_sn0();
void Rte_COMCbkTxTOut_sn0();
void Rte_COMCbkTErr_sn1();
void Rte_COMCbkTAck_sn1();
void Rte_COMCbkTxTOut_sn1();
void Rte_COMCbkTErr_sn2();
void Rte_COMCbkTAck_sn2();
void Rte_COMCbkTxTOut_sn2();
void Rte_COMCbkTErr_sn3();
void Rte_COMCbkTAck_sn3();
void Rte_COMCbkTxTOut_sn3();
void Rte_COMCbkTErr_sn4();
void Rte_COMCbkTAck_sn4();
void Rte_COMCbkTxTOut_sn4();
void Rte_COMCbkTErr_sn5();
void Rte_COMCbkTAck_sn5();
void Rte_COMCbkTxTOut_sn5();
void Rte_COMCbkTErr_sn6();
void Rte_COMCbkTAck_sn6();
void Rte_COMCbkTxTOut_sn6();
void Rte_COMCbkTErr_sn7();
void Rte_COMCbkTAck_sn7();
void Rte_COMCbkTxTOut_sn7();
void Rte_COMCbkTErr_sn8();
void Rte_COMCbkTAck_sn8();
void Rte_COMCbkTxTOut_sn8();
void Rte_COMCbkTErr_sn9();
void Rte_COMCbkTAck_sn9();
void Rte_COMCbkTxTOut_sn9();
void Rte_COMCbkTErr_sn10();
void Rte_COMCbkTAck_sn10();
void Rte_COMCbkTxTOut_sn10();
void Rte_COMCbkTErr_sn11();
void Rte_COMCbkTAck_sn11();
void Rte_COMCbkTxTOut_sn11();
void Rte_COMCbkTErr_sn12();
void Rte_COMCbkTAck_sn12();
void Rte_COMCbkTxTOut_sn12();
void Rte_COMCbkTErr_sn13();
void Rte_COMCbkTAck_sn13();
void Rte_COMCbkTxTOut_sn13();
void Rte_COMCbkTErr_sn14();
void Rte_COMCbkTAck_sn14();
void Rte_COMCbkTxTOut_sn14();
void Rte_COMCbkTErr_sn15();
void Rte_COMCbkTAck_sn15();
void Rte_COMCbkTxTOut_sn15();
void Rte_COMCbkTErr_sn16();
void Rte_COMCbkTAck_sn16();
void Rte_COMCbkTxTOut_sn16();
void Rte_COMCbkTErr_sn17();
void Rte_COMCbkTAck_sn17();
void Rte_COMCbkTxTOut_sn17();
void Rte_COMCbkTErr_sn18();
void Rte_COMCbkTAck_sn18();
void Rte_COMCbkTxTOut_sn18();
void Rte_COMCbkTErr_sn19();
void Rte_COMCbkTAck_sn19();
void Rte_COMCbkTxTOut_sn19();
void Rte_COMCbkTErr_sn20();
void Rte_COMCbkTAck_sn20();
void Rte_COMCbkTxTOut_sn20();
void Rte_COMCbkTErr_sn21();
void Rte_COMCbkTAck_sn21();
void Rte_COMCbkTxTOut_sn21();
void Rte_COMCbkTErr_sn22();
void Rte_COMCbkTAck_sn22();
void Rte_COMCbkTxTOut_sn22();
void Rte_COMCbkTErr_sn23();
void Rte_COMCbkTAck_sn23();
void Rte_COMCbkTxTOut_sn23();
void Rte_COMCbkTErr_sn24();
void Rte_COMCbkTAck_sn24();
void Rte_COMCbkTxTOut_sn24();
void Rte_COMCbkTErr_sn25();
void Rte_COMCbkTAck_sn25();
void Rte_COMCbkTxTOut_sn25();
void Rte_COMCbkTErr_sn26();
void Rte_COMCbkTAck_sn26();
void Rte_COMCbkTxTOut_sn26();
void Rte_COMCbkTErr_sn27();
void Rte_COMCbkTAck_sn27();
void Rte_COMCbkTxTOut_sn27();
void Rte_COMCbkTErr_sn28();
void Rte_COMCbkTAck_sn28();
void Rte_COMCbkTxTOut_sn28();
void Rte_COMCbkTErr_sn29();
void Rte_COMCbkTAck_sn29();
void Rte_COMCbkTxTOut_sn29();
void Rte_COMCbkTErr_sn30();
void Rte_COMCbkTAck_sn30();
void Rte_COMCbkTxTOut_sn30();
void Rte_COMCbkTErr_sn31();
void Rte_COMCbkTAck_sn31();
void Rte_COMCbkTxTOut_sn31();
void Rte_COMCbkTErr_sn32();
void Rte_COMCbkTAck_sn32();
void Rte_COMCbkTxTOut_sn32();
void Rte_COMCbkTErr_sn33();
void Rte_COMCbkTAck_sn33();
void Rte_COMCbkTxTOut_sn33();
void Rte_COMCbkTErr_sn34();
void Rte_COMCbkTAck_sn34();
void Rte_COMCbkTxTOut_sn34();
void Rte_COMCbkTErr_sn35();
void Rte_COMCbkTAck_sn35();
void Rte_COMCbkTxTOut_sn35();
void Rte_COMCbkTErr_sn36();
void Rte_COMCbkTAck_sn36();
void Rte_COMCbkTxTOut_sn36();
void Rte_COMCbkTErr_sn37();
void Rte_COMCbkTAck_sn37();
void Rte_COMCbkTxTOut_sn37();
void Rte_COMCbkTErr_sn38();
void Rte_COMCbkTAck_sn38();
void Rte_COMCbkTxTOut_sn38();
void Rte_COMCbkTErr_sn39();
void Rte_COMCbkTAck_sn39();
void Rte_COMCbkTxTOut_sn39();
void Rte_COMCbkTErr_sn40();
void Rte_COMCbkTAck_sn40();
void Rte_COMCbkTxTOut_sn40();
void Rte_COMCbkTErr_sn41();
void Rte_COMCbkTAck_sn41();
void Rte_COMCbkTxTOut_sn41();
void Rte_COMCbkTErr_sn42();
void Rte_COMCbkTAck_sn42();
void Rte_COMCbkTxTOut_sn42();
void Rte_COMCbkTErr_sn43();
void Rte_COMCbkTAck_sn43();
void Rte_COMCbkTxTOut_sn43();
void Rte_COMCbkTErr_sn44();
void Rte_COMCbkTAck_sn44();
void Rte_COMCbkTxTOut_sn44();
void Rte_COMCbkTErr_sn45();
void Rte_COMCbkTAck_sn45();
void Rte_COMCbkTxTOut_sn45();
void Rte_COMCbkTErr_sn46();
void Rte_COMCbkTAck_sn46();
void Rte_COMCbkTxTOut_sn46();
void Rte_COMCbkTErr_sn47();
void Rte_COMCbkTAck_sn47();
void Rte_COMCbkTxTOut_sn47();
void Rte_COMCbkTErr_sn48();
void Rte_COMCbkTAck_sn48();
void Rte_COMCbkTxTOut_sn48();
void Rte_COMCbkTErr_sn49();
void Rte_COMCbkTAck_sn49();
void Rte_COMCbkTxTOut_sn49();
void Rte_COMCbkTErr_sn50();
void Rte_COMCbkTAck_sn50();
void Rte_COMCbkTxTOut_sn50();
void Rte_COMCbkTErr_sn51();
void Rte_COMCbkTAck_sn51();
void Rte_COMCbkTxTOut_sn51();
void Rte_COMCbkTErr_sn52();
void Rte_COMCbkTAck_sn52();
void Rte_COMCbkTxTOut_sn52();
void Rte_COMCbkTErr_sn53();
void Rte_COMCbkTxTOut_sn53();
void Rte_COMCbkTErr_sn54();
void Rte_COMCbkTAck_sn54();
void Rte_COMCbkTxTOut_sn54();
void Rte_COMCbkTErr_sn55();
void Rte_COMCbkTAck_sn55();
void Rte_COMCbkTxTOut_sn55();
void Rte_COMCbkTErr_sn56();
void Rte_COMCbkTAck_sn56();
void Rte_COMCbkTxTOut_sn56();
void Rte_COMCbkTErr_sn57();
void Rte_COMCbkTAck_sn57();
void Rte_COMCbkTxTOut_sn57();
void Rte_COMCbkTErr_sn58();
void Rte_COMCbkTAck_sn58();
void Rte_COMCbkTxTOut_sn58();
void Rte_COMCbkTErr_sn59();
void Rte_COMCbkTAck_sn59();
void Rte_COMCbkTxTOut_sn59();
void Rte_COMCbkTErr_sn60();
void Rte_COMCbkTAck_sn60();
void Rte_COMCbkTxTOut_sn60();
void Rte_COMCbkTErr_sn61();
void Rte_COMCbkTAck_sn61();
void Rte_COMCbkTxTOut_sn61();
void Rte_COMCbkTErr_sn62();
void Rte_COMCbkTAck_sn62();
void Rte_COMCbkTxTOut_sn62();
void Rte_COMCbkTErr_sn63();
void Rte_COMCbkTAck_sn63();
void Rte_COMCbkTxTOut_sn63();
void Rte_COMCbkTErr_sn64();
void Rte_COMCbkTAck_sn64();
void Rte_COMCbkTxTOut_sn64();
void Rte_COMCbkTErr_sn65();
void Rte_COMCbkTAck_sn65();
void Rte_COMCbkTxTOut_sn65();
void Rte_COMCbkTErr_sn66();
void Rte_COMCbkTAck_sn66();
void Rte_COMCbkTxTOut_sn66();
void Rte_COMCbkTErr_sn67();
void Rte_COMCbkTAck_sn67();
void Rte_COMCbkTxTOut_sn67();
void Rte_COMCbkTErr_sn68();
void Rte_COMCbkTAck_sn68();
void Rte_COMCbkTxTOut_sn68();
void Rte_COMCbkTErr_sn69();
void Rte_COMCbkTAck_sn69();
void Rte_COMCbkTxTOut_sn69();
void Rte_COMCbkTErr_sn70();
void Rte_COMCbkTAck_sn70();
void Rte_COMCbkTxTOut_sn70();
void Rte_COMCbkTErr_sn71();
void Rte_COMCbkTAck_sn71();
void Rte_COMCbkTxTOut_sn71();
void Rte_COMCbkTErr_sn72();
void Rte_COMCbkTAck_sn72();
void Rte_COMCbkTxTOut_sn72();
void Rte_COMCbkTErr_sn73();
void Rte_COMCbkTAck_sn73();
void Rte_COMCbkTxTOut_sn73();
void Rte_COMCbkTErr_sn74();
void Rte_COMCbkTAck_sn74();
void Rte_COMCbkTxTOut_sn74();
void Rte_COMCbkTErr_sn75();
void Rte_COMCbkTAck_sn75();
void Rte_COMCbkTxTOut_sn75();
void Rte_COMCbkTErr_sn76();
void Rte_COMCbkTAck_sn76();
void Rte_COMCbkTxTOut_sn76();
void Rte_COMCbkTErr_sn77();
void Rte_COMCbkTAck_sn77();
void Rte_COMCbkTxTOut_sn77();
void Rte_COMCbkTErr_sn78();
void Rte_COMCbkTAck_sn78();
void Rte_COMCbkTxTOut_sn78();
void Rte_COMCbkTErr_sn79();
void Rte_COMCbkTAck_sn79();
void Rte_COMCbkTxTOut_sn79();
void Rte_COMCbkTErr_sn80();
void Rte_COMCbkTAck_sn80();
void Rte_COMCbkTxTOut_sn80();
void Rte_COMCbkTErr_sn82();
void Rte_COMCbkTAck_sn82();
void Rte_COMCbkTxTOut_sn82();
void Rte_COMCbkTErr_sn83();
void Rte_COMCbkTAck_sn83();

#endif /* RTE_CBK_H */
