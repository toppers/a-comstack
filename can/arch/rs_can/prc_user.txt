
	TOPPERS/A-CAN
	＜RS-CAN依存部マニュアル＞

本ドキュメントは，主にV850E3プロセッサに搭載されているCANコントローラで
あるRS-CAN依存部を使用する情報を記述したものである．

----------------------------------------------------------------------
TOPPERS/A-CAN
    Automotive CAN

Copyright (C) 2014-2015 by FUJI SOFT INCORPORATED, JAPAN

上記著作権者は，以下の (1)~(3)の条件を満たす場合に限り，本ドキュメ
ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
(1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
    および下記の無保証規定が，そのままの形でドキュメント中に含まれて
    いること．
(2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
    を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
    ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
    りではない．
(3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
    からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
    本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
    く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

本ドキュメントは，AUTOSAR（AUTomotive Open System ARchitecture）仕様
に基づいている．上記の許諾は，AUTOSARの知的財産権を許諾するものではな
い．AUTOSARは，AUTOSAR仕様に基づいたソフトウェアを商用目的で利用する
者に対して，AUTOSARパートナーになることを求めている．

本ドキュメントは，無保証で提供されているものである．上記著作権者およ
びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
により直接的または間接的に生じたいかなる損害に関しても，その責任を負
わない．

$Id: prc_user.txt 13 2015-07-15 08:58:53Z fujisft-kaitori $
----------------------------------------------------------------------

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(1) 概要
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
A-CANのRS-CAN依存部で現状動作確認しているLSIは，次の通りである．
 ・RH850/F1L
 ・RH850/F1K

本ドキュメントでは，RS-CANを使用する場合のCANコントローラに依存する各機
能のサポート有無，パラメータコンテナ仕様の中で曖昧となっている事項に関
して規定する．

―――――――――――――――――――――――――――――――――――
(1.1) フォルダ構成
―――――――――――――――――――――――――――――――――――
A-CAN(arch/rs_can)フォルダの構成について以下の通りとなる．

rs_can            ：RS-CAN依存部
 ┣ Can_Prc.c     ：RS-CAN依存部処理ファイル
 ┣ Can_Prc.h     ：RS-CAN依存部処理ヘッダファイル
 ┣ Can_Prc.tf    ：RS-CAN依存部テンプレートファイル
 ┗ prc_user.txt  ：本ドキュメント

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(2) CANモジュール機能の各サポートについて
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

―――――――――――――――――――――――――――――――――――
(2.1) CANコントローラモード管理
―――――――――――――――――――――――――――――――――――
■RS-CAN依存部ではCANコントローラの状態はスタート(CAN_T_START)とストッ
  プ(CAN_T_STOP)の2つ状態管理のみ対応する．スリープ(CAN_T_SLEEP)とウェ
  イクアップ(CAN_T_WAKEUP)について未サポートとしており，以下の関連する
  依存部の関数についても未対応とする．
    ・can_target_sleep_controller_and_change_interrupt
    ・can_target_wakeup_controller_and_change_interrupt
    ・can_target_check_wakeup

―――――――――――――――――――――――――――――――――――
(2.2) 受信ルールと送受信FIFOバッファ
―――――――――――――――――――――――――――――――――――
■RS-CAN依存部では，ハードウェアで受信メッセージを選別するための受信ル
  ールの設定と受信メッセージの取得するためのバッファ(送受信FIFOバッファ)
  を使用して受信処理を行う．送受信FIFOバッファを使用することで制約が発
  生するため，以下の条件に沿ってCANの受信を使用するように対応する．
  ・1コントローラで扱うHRHは3つまでとする
    ・送受信FIFOは各コントローラに3本まで使用可能
      ・1コントローラで3本以上の使用はしない
    ・受信ルールは送受信FIFO1本につき1つ設定可能
      ・1コントローラで3つ以上の受信ルールは設定しない

―――――――――――――――――――――――――――――――――――
(2.3) Can_MainFunction_Modeの使用
―――――――――――――――――――――――――――――――――――
■Can_MainFunction_Modeの動作はBSWスケジューラによって決定するが，
  RS-CAN依存部ではBSWスケジューラの対応はしていないため，
  Can_MainFunction_Modeは使用しない．

―――――――――――――――――――――――――――――――――――
(2.4) ビジーウェイト処理
―――――――――――――――――――――――――――――――――――
■RS-CAN依存部ではレジスタの設定を行い，その直後に設定が反映されたかを
  判定する処理があるため，レジスタの設定処理後の設定反映待ちを考慮して
  ビジーウェイト処理(can_target_busy_wait)を使用する．
  can_target_busy_waitでは依存部固有の時間でタイムアウトするようにルー
  プのみの処理(何も処理を行わない)を実施する．

  RS-CAN依存部では80MHzのクロック周波数に対して実行クロック数が7(ループ
  処理)となるため，ビジーウェイト内のループ回数を100000回に設定して，
  ビジーウェイトの処理時間を約13msecとしている．
  ビジーウェイト処理は，CanTimeoutDurationによるタイムアウト処理内で使
  用しており，タイムアウト時間をサンプルでは100msecとしているため，8回
  程度リトライすることを想定している．

―――――――――――――――――――――――――――――――――――
(2.5) Can_MainFunction_xxxは未サポート
―――――――――――――――――――――――――――――――――――
■現状のRS-CAN依存部では割込みによる送信/受信完了通知のみサポートし，
  Can_MainFunction_xxxは未サポートである．そのため，CanXxxProcessingに
  POLLINGを指定しても，正しく動作しない．

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(3) 設定パラメータ制約
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
以下の制約に反するディスクリプションファイルを入力した場合，ジェネレー
タはエラーを検出する．

―――――――――――――――――――――――――――――――――――
(3.1) CanHandleType
―――――――――――――――――――――――――――――――――――
■RS-CANのハードウェアオブジェクトはFullCANであるため，CanHandleTypeに
  FULL以外を指定した場合，エラーとする．

―――――――――――――――――――――――――――――――――――
(3.2) CanIdType
―――――――――――――――――――――――――――――――――――
■サポートするCAN-IDはスタンダード(11bit)のみであるため，CanIdTypeに
  STANDARD以外を指定した場合，エラーとする．

―――――――――――――――――――――――――――――――――――
(3.3) CanObjectType
―――――――――――――――――――――――――――――――――――
■RS-CANのHRH数はコントローラごとに3個としているため，同一の
  CanControllerRefで指定しているCanHardwareObject内のRECEIVE
  (CanObjectTypeのRange)が3つより多く定義した場合，エラーとする．

―――――――――――――――――――――――――――――――――――
(3.4) CanFilterMask
―――――――――――――――――――――――――――――――――――
■RS-CANにてフィルタマスクを設定できる数は，受信ルールをコントローラご
  とに3つとしているため，それより多く定義した場合，エラーとする．

―――――――――――――――――――――――――――――――――――
(3.5) CanFilterMaskRef
―――――――――――――――――――――――――――――――――――
■CanHardwareObject/CanControllerRefで参照するCanControllerと，
  CanFilterMaskRefが参照するCanController/CanFilterMaskのCanController
  は同じCanControllerを指定するべきであるため，違うCanControllerが指定
  されていた場合，エラーとする．

―――――――――――――――――――――――――――――――――――
(3.6) CanControllerBaudRate
―――――――――――――――――――――――――――――――――――
■CanControllerBaudRateに250または500以外を指定した場合，エラーとする．



以上
